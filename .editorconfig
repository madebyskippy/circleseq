# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

[*]
indent_style = tab
indent_size = 4
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = false
insert_final_newline = false

[*.{json,asmdef}]
indent_size = 2

[*.cs]
max_line_length = 120

# Our qualification style depends only on a symbol being CamelCase or not, which is not supported.
dotnet_style_qualification_for_field = true:none
dotnet_style_qualification_for_property = true:none
dotnet_style_qualification_for_method = true:none
dotnet_style_qualification_for_event = true:none

# New line preferences
csharp_new_line_before_open_brace = never
csharp_new_line_before_else = false
csharp_new_line_before_catch = false
csharp_new_line_before_finally = false
csharp_new_line_before_members_in_object_initializers = false
csharp_new_line_before_members_in_anonymous_types = false
csharp_new_line_between_query_expression_clauses = false

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Suggest acessibility modifier is redundant
dotnet_style_require_accessibility_modifiers = never:suggestion

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

# Prefer braces even on single line
csharp_prefer_braces = true:suggestion

# Rider doesn't seem to default to these
csharp_space_after_cast = false
csharp_preserve_single_line_blocks = true

# Rider/Resharper specific
csharp_space_within_single_line_array_initializer_braces = true
resharper_redundant_assignment_highlighting = suggestion
resharper_for_can_be_converted_to_foreach_highlighting = none

# Naming

## PascalCase for everything as default
dotnet_naming_symbols.everything.applicable_kinds = property,method,field,event,delegate
dotnet_naming_symbols.everything.applicable_accessibilities = public,internal,protected,protected_internal,private

dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_rule.everything_pascal_case.symbols = everything
dotnet_naming_rule.everything_pascal_case.severity = warning
dotnet_naming_rule.everything_pascal_case.style = pascal_case

## m_PascalCase for private and protected fields
dotnet_naming_symbols.private_protected_fields.applicable_kinds = field
dotnet_naming_symbols.private_protected_fields.applicable_accessibilities = private,protected

dotnet_naming_style.m_prefix_pascal_case.required_prefix = m_
dotnet_naming_style.m_prefix_pascal_case.capitalization = pascal_case

dotnet_naming_rule.private_protected_fields_with_m_prefix_pascal_case.symbols = private_protected_fields
dotnet_naming_rule.private_protected_fields_with_m_prefix_pascal_case.style = m_prefix_pascal_case
dotnet_naming_rule.private_protected_fields_with_m_prefix_pascal_case.severity = warning

## _PascalCase for private static fields
dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.applicable_accessibilities = private
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.underscore_pascal_case.required_prefix = _
dotnet_naming_style.underscore_pascal_case.capitalization = pascal_case

dotnet_naming_rule.static_fields_underscore_pascal_case.symbols = static_fields
dotnet_naming_rule.static_fields_underscore_pascal_case.severity = warning
dotnet_naming_rule.static_fields_underscore_pascal_case.style = underscore_pascal_case